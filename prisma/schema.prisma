generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model user {
  id             Int             @id @default(autoincrement())
  name           String?
  email          String          @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  role           String
  managedBy      String?
  phoneNumber    String?
  status         String          @default("Idle")
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  accounts       account[]
  centerCode     String
  akshayaCenter  akshayaCenter[]
  transactions   transactions[]
}

model account {
  id                Int     @id @default(autoincrement())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user user @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model services {
  serviceId     Int            @id @default(autoincrement())
  serviceName   String
  serviceCost   Int
  serviceProfit Int
  serviceLink   String
  transactions  transactions[]
}

model akshayaCenter {
  centerEmail  String         @id @unique
  centerCode   String         @unique
  address      String
  phoneNumber  String
  gstNumber    String?
  user         user           @relation(fields: [centerEmail], references: [email])
  transactions transactions[]
}

model transactions {
  transactionId     Int            @id @default(autoincrement())
  transactionTime   DateTime       @default(now())
  transactionStatus String
  servedBy          Int
  customerName      String
  assignedTo        String
  outsourceTo       String?
  insourceFrom      String?
  serviceID         Int?
  service           services?      @relation(fields: [serviceID], references: [serviceId])
  user              user           @relation(fields: [assignedTo], references: [email])
  akshayaCenter     akshayaCenter? @relation(fields: [centerEmail], references: [centerEmail])
  centerEmail       String?
}
